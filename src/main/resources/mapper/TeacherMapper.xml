<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yi.mapper.TeacherMapper" >
  <resultMap id="BaseResultMap" type="com.yi.entity.Teacher" >
    <id column="tecid" property="tecid" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="tecname" property="tecname" jdbcType="VARCHAR" />
    <result column="tecpassword" property="tecpassword" jdbcType="VARCHAR" />
    <result column="role" property="role" jdbcType="VARCHAR" />
    <result column="tecage" property="tecage" jdbcType="INTEGER" />
    <result column="tecsex" property="tecsex" jdbcType="VARCHAR" />
    <result column="tecmajor" property="tecmajor" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="registertime" property="registertime" jdbcType="TIMESTAMP" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="tecintroduce" property="tecintroduce" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    tecid, role_id, tecname, tecpassword, role, tecage, tecsex, tecmajor, phone, email, 
    qq, registertime, address, tecintroduce
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yi.entity.TeacherExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from teacher
    where tecid = #{tecid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from teacher
    where tecid = #{tecid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yi.entity.TeacherExample" >
    delete from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yi.entity.Teacher" >
    insert into teacher (tecid, role_id, tecname, 
      tecpassword, role, tecage, 
      tecsex, tecmajor, phone, 
      email, qq, registertime, 
      address, tecintroduce)
    values (#{tecid,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, #{tecname,jdbcType=VARCHAR}, 
      #{tecpassword,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, #{tecage,jdbcType=INTEGER}, 
      #{tecsex,jdbcType=VARCHAR}, #{tecmajor,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{registertime,jdbcType=TIMESTAMP}, 
      #{address,jdbcType=VARCHAR}, #{tecintroduce,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yi.entity.Teacher" >
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tecid != null" >
        tecid,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="tecname != null" >
        tecname,
      </if>
      <if test="tecpassword != null" >
        tecpassword,
      </if>
      <if test="role != null" >
        role,
      </if>
      <if test="tecage != null" >
        tecage,
      </if>
      <if test="tecsex != null" >
        tecsex,
      </if>
      <if test="tecmajor != null" >
        tecmajor,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="registertime != null" >
        registertime,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="tecintroduce != null" >
        tecintroduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tecid != null" >
        #{tecid,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="tecname != null" >
        #{tecname,jdbcType=VARCHAR},
      </if>
      <if test="tecpassword != null" >
        #{tecpassword,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="tecage != null" >
        #{tecage,jdbcType=INTEGER},
      </if>
      <if test="tecsex != null" >
        #{tecsex,jdbcType=VARCHAR},
      </if>
      <if test="tecmajor != null" >
        #{tecmajor,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="registertime != null" >
        #{registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="tecintroduce != null" >
        #{tecintroduce,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yi.entity.TeacherExample" resultType="java.lang.Integer" >
    select count(*) from teacher
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update teacher
    <set >
      <if test="record.tecid != null" >
        tecid = #{record.tecid,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.tecname != null" >
        tecname = #{record.tecname,jdbcType=VARCHAR},
      </if>
      <if test="record.tecpassword != null" >
        tecpassword = #{record.tecpassword,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null" >
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.tecage != null" >
        tecage = #{record.tecage,jdbcType=INTEGER},
      </if>
      <if test="record.tecsex != null" >
        tecsex = #{record.tecsex,jdbcType=VARCHAR},
      </if>
      <if test="record.tecmajor != null" >
        tecmajor = #{record.tecmajor,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.registertime != null" >
        registertime = #{record.registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.tecintroduce != null" >
        tecintroduce = #{record.tecintroduce,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update teacher
    set tecid = #{record.tecid,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=INTEGER},
      tecname = #{record.tecname,jdbcType=VARCHAR},
      tecpassword = #{record.tecpassword,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=VARCHAR},
      tecage = #{record.tecage,jdbcType=INTEGER},
      tecsex = #{record.tecsex,jdbcType=VARCHAR},
      tecmajor = #{record.tecmajor,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      registertime = #{record.registertime,jdbcType=TIMESTAMP},
      address = #{record.address,jdbcType=VARCHAR},
      tecintroduce = #{record.tecintroduce,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yi.entity.Teacher" >
    update teacher
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="tecname != null" >
        tecname = #{tecname,jdbcType=VARCHAR},
      </if>
      <if test="tecpassword != null" >
        tecpassword = #{tecpassword,jdbcType=VARCHAR},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="tecage != null" >
        tecage = #{tecage,jdbcType=INTEGER},
      </if>
      <if test="tecsex != null" >
        tecsex = #{tecsex,jdbcType=VARCHAR},
      </if>
      <if test="tecmajor != null" >
        tecmajor = #{tecmajor,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="registertime != null" >
        registertime = #{registertime,jdbcType=TIMESTAMP},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="tecintroduce != null" >
        tecintroduce = #{tecintroduce,jdbcType=VARCHAR},
      </if>
    </set>
    where tecid = #{tecid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yi.entity.Teacher" >
    update teacher
    set role_id = #{roleId,jdbcType=INTEGER},
      tecname = #{tecname,jdbcType=VARCHAR},
      tecpassword = #{tecpassword,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      tecage = #{tecage,jdbcType=INTEGER},
      tecsex = #{tecsex,jdbcType=VARCHAR},
      tecmajor = #{tecmajor,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      registertime = #{registertime,jdbcType=TIMESTAMP},
      address = #{address,jdbcType=VARCHAR},
      tecintroduce = #{tecintroduce,jdbcType=VARCHAR}
    where tecid = #{tecid,jdbcType=VARCHAR}
  </update>
</mapper>